$navbar-height: 5rem;
$default-transition-time: 0.28s;
$color-white: #ffffff;
$color-black: #333333;

/* Utility colors */
/*
  TODO THIS PALLETE NEEDS REFACTOR
  The colors were changing in the design all the time and
  a lot of them are super similar and redundant.
 */
$color-dark: #111828;
$color-navy-gray: #141c2e;
$color-navy-gray-light: #151e33;
$color-navy-gray-dark: #0f172a;
$color-table-row: #162039;
$color-hover: #1a2338;
$color-badge-navy: #171e30;
$color-border-dark: #242c40; // THEY ARE THE SAME, use one
$color-border-light: #252c3d; // THEY ARE THE SAME, use one
$color-toast: #242e45;
$color-moonlight-dark: #293041;
$color-moonlight: rgba(31, 95, 255, 0.16);
$color-moonlight-light: #343d50;
$color-disabled: #646465;
$color-gray-transparent: rgba(246, 249, 255, 0.08);
$color-gray-light-transparent: rgba(246, 249, 255, 0.04);
$color-divider: #1a2234;
$color-light-border: rgba(119, 130, 159, 1);
$color-box-shadow: rgba(31, 95, 255, 0.16);
$color-midnight-blue: #0c0d1229;
$color-bg-transparent: #F6F9FF05;
$color-bg-toast: #232E45;

/* Vuetify colors */
// Currently also defined in the plugins/vuetify.ts
$color-background: $color-dark;
$color-surface: #121a2c;
$color-primary: #1f5fff;
$color-primary-dark: #1a50d6;
$color-primary-darker: #1c3165;
$color-secondary: #d2dfff;
$color-secondary-dark: #8e97ad;
$color-error: #de3838;
$color-error-text: white;
$color-info: #2196f3;
$color-success: #35bd48;
$color-success-light: #38de8e;
$color-success-text: white;
$color-warning: #ffd33d;
$color-warning-text: #836900;
$color-inactive: #4e5972;
$color-steel-blue: #77829f;
$color-card-background: rgba(246, 249, 255, 0.02);
$color-background-button: rgba(246, 249, 255, 0.06);

/* Typography */
$color-title: $color-white;
$color-subtitle: #45557f;
$color-light-subtitle: rgba(246, 249, 255, 0.76);
$color-text-irrelevant: #bfc4cf;

$text-xl: 1.5rem;
$text-lg: 1.25rem;
$text-md: 1rem;
$text-sm: 0.875rem;
$text-xs: 0.8125rem;

$letter-spacing-lg: 0.03rem;
// Status Type Colors
$color-status-type-active: #db38de;
$color-status-type-executed: $color-success-light;
$color-status-type-defeated: $color-error;
$color-status-type-to-execute: $color-primary;
$color-status-type-canceled: #de6a38;

// Use these variables to generate CSS rules
$proposal-states: (
  "active": $color-status-type-active,
  "executed": $color-status-type-executed,
  "defeated": $color-status-type-defeated,
  "to_execute": $color-status-type-to-execute,
  "canceled": $color-status-type-canceled,
);

@each $state, $color in $proposal-states {
  .proposal_state_#{$state} {
    color: $color;
  }
}

// Position Type Colors
$color-position-type-liquid: #de6a38;
$color-position-type-composable: #38de8e;
$color-position-type-nft: #741fff;
$color-position-type-illiquid: #ffd700;

// Use these variables to generate CSS rules
$position-types: (
  "liquid": $color-position-type-liquid,
  "composable": $color-position-type-composable,
  "nft": $color-position-type-nft,
  "illiquid": $color-position-type-illiquid,
);

@each $type, $color in $position-types {
  .position_type_#{$type} {
    color: $color;
  }
}

// Breakpoints
$screen-xs: 360px; // Extra small screen / phone
$screen-sm: 480px; // Mobile
$screen-md: 768px; // Tablet
$screen-lg: 960px; // Desktop (small)
$screen-xl: 1200px; // Desktop (large)
$screen-xxl: 1460px; // Desktop (extra large)

/**
Define the needed colors as CSS variables, as they can be used in certain
plugins like Apexcharts with "var(--color-something)" to prevent redefining colors.
 */
:root {
  --color-primary: #{$color-primary};
  --color-subtitle: #{$color-subtitle};
  --color-divider: #{$color-divider};
  --color-light-subtitle: #{$color-light-subtitle};
  --color-gray-light-transparent: #{$color-gray-light-transparent};
  --color-success: #{$color-success};
  --color-warning: #{$color-warning};
  --color-error: #{$color-error};
}
$default-border-radius: 0.25rem;

// Define a mixin to apply border properties based on position
// Define a variable for border properties
$default-border-properties: (
  "border": 1px solid $color-gray-transparent,
);
@mixin borderGray(
  $position: "border",
  $border-radius: true,
  $border-color: $color-gray-transparent
) {
  // Apply border radius if enabled
  @if $border-radius {
    border-radius: $default-border-radius;
  }

  // Apply specific border position.
  #{$position}: 1px solid $border-color;
}

// include offset as a argument
@mixin customScrollbar($offset: 10px) {
    // offset the scrollbar to the left
    padding-right: $offset;
    margin-right: -$offset;

    /* Custom scrollbar styles */
    &::-webkit-scrollbar {
      width: 4px;
      height: 4px;
    }
    &::-webkit-scrollbar-track {
      background: $color-subtitle;
      border-radius: 16px;
    }

    &::-webkit-scrollbar-thumb {
      background: $color-primary;
      border-radius: 16px;
    }

    &::-webkit-scrollbar-thumb:hover {
      background: $color-steel-blue;
    }
}
