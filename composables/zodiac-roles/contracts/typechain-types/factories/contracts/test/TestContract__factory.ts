/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestContract,
  TestContractInterface,
} from "../../../contracts/test/TestContract";

const _abi = [
  {
    inputs: [],
    name: "AnError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DoEvenLess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DoNothing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "Dynamic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes8[]",
        name: "",
        type: "bytes8[]",
      },
    ],
    name: "Dynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes2[]",
        name: "",
        type: "bytes2[]",
      },
    ],
    name: "DynamicDynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "EmitTheSender",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithSingleParam",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithThreeParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "FnWithTwoMixedParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FnWithTwoParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Receive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceiveEthAndDoNothing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ReceiveFallback",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "test2",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test3",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "test4",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "test5",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test6",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "test7",
        type: "string",
      },
    ],
    name: "TestDynamic",
    type: "event",
  },
  {
    inputs: [],
    name: "doEvenLess",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "doNothing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "first",
        type: "bytes",
      },
    ],
    name: "dynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes8[]",
        name: "first",
        type: "bytes8[]",
      },
    ],
    name: "dynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "first",
        type: "string",
      },
      {
        internalType: "bytes2[]",
        name: "second",
        type: "bytes2[]",
      },
    ],
    name: "dynamicDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emitTheSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fnThatReverts",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "p",
        type: "uint256",
      },
    ],
    name: "fnWithSingleParam",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "c",
        type: "uint256",
      },
    ],
    name: "fnWithThreeParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "a",
        type: "bool",
      },
      {
        internalType: "string",
        name: "s",
        type: "string",
      },
    ],
    name: "fnWithTwoMixedParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "a",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "b",
        type: "uint256",
      },
    ],
    name: "fnWithTwoParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveEthAndDoNothing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "test",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "test2",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "test3",
        type: "string",
      },
      {
        internalType: "bool",
        name: "test4",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "test5",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "test6",
        type: "string",
      },
      {
        internalType: "string",
        name: "test7",
        type: "string",
      },
    ],
    name: "testDynamic",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061139e806100206000396000f3fe6080604052600436106100e15760003560e01c80636a4e8f301161007f578063bd26450411610059578063bd264504146102ab578063d543852a146102d4578063e3744173146102fd578063fb7ec5b5146103265761014b565b80636a4e8f30146102665780636f52399e1461027d57806372223e48146102945761014b565b80632f576f20116100bb5780632f576f20146101df5780632f912fa1146101f657806340c10f191461021f5780635c2ce3601461025c5761014b565b8063192cf58c1461015057806322ad042e14610179578063273454bf146101a25761014b565b3661014b577f9f1b3bad61172afd7ac57ee5c5873e1c8fad6c4b8e0fe408853ffbd909aaa83060405160405180910390a17fda7d83adce6afb77a23621d798fdc5d4522f5e19632538a6197b179b220df0d3346040516101419190610fe4565b60405180910390a1005b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190610bdb565b61034f565b005b34801561018557600080fd5b506101a0600480360381019061019b9190610921565b61038c565b005b3480156101ae57600080fd5b506101c960048036038101906101c49190610a9c565b6103c9565b6040516101d69190610ead565b60405180910390f35b3480156101eb57600080fd5b506101f461041d565b005b34801561020257600080fd5b5061021d60048036038101906102189190610c1b565b61044b565b005b34801561022b57600080fd5b50610246600480360381019061024191906108e1565b61048b565b6040516102539190610fe4565b60405180910390f35b6102646104cf565b005b34801561027257600080fd5b5061027b610508565b005b34801561028957600080fd5b5061029261053a565b005b3480156102a057600080fd5b506102a9610573565b005b3480156102b757600080fd5b506102d260048036038101906102cd9190610a1b565b6105a1565b005b3480156102e057600080fd5b506102fb60048036038101906102f691906109ce565b6105e4565b005b34801561030957600080fd5b50610324600480360381019061031f919061096e565b610621565b005b34801561033257600080fd5b5061034d60048036038101906103489190610bae565b610661565b005b7fd4cbd7c3e3de660f7e080e318585f2883c381bcce4171d2b40e437c168f0f5758282604051610380929190610fff565b60405180910390a15050565b7f8d0ee72ec84528d9dbd6f8b33d48294e15a334bdaff974c4427d1600aafcfce282826040516103bd929190610e89565b60405180910390a15050565b60007f177ff055a3d32dfc89433965c7594ae51f34616dcdc089e6b013f94799fd35ea888888888888886040516104069796959493929190610f59565b60405180910390a160019050979650505050505050565b7fdebca8641d6a3e24f2d68b21c2a70c1282afab0888c30b014ed143b90cb20aa160405160405180910390a1565b7fc2cd290053212d60c0f05c8be12fbcaf500f0319a87d59460e63dcd506ad186683838360405161047e93929190611028565b60405180910390a1505050565b60007f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688583836040516104be929190610e60565b60405180910390a181905092915050565b7f5f13db7d203ec5ddf6f745c7d0f1664b174a00700f5a4475f4762be2d4453e62346040516104fe9190610fe4565b60405180910390a1565b6040517f7d1d8db700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fcf58ef68346aa2e95de25def197e41f124f0da9c267a54870f2d7306eb7c6109336040516105699190610e45565b60405180910390a1565b7f81a61eef099e179c19ede601377564f392855032790628b18479e314434de98f60405160405180910390a1565b7fb90d809d1ba43ca508adc3a44ac8992a8a1711b3f5daeb8e152d6d2f960f8a34848484846040516105d69493929190610f1e565b60405180910390a150505050565b7f269d5c7aa3311ea7433293a56ccb466f615e7389222855917144406466db21868282604051610615929190610efa565b60405180910390a15050565b7f9c5299ebb669c44463581ad98cb95331cda05845d91ca8249cef5de0dd6d435883838360405161065493929190610ec8565b60405180910390a1505050565b7fb969d7697624f2851da52ab0857042ca6f4ee316ccff715d593ef4dd68820508816040516106909190610fe4565b60405180910390a150565b60006106ae6106a984611084565b61105f565b9050828152602081018484840111156106ca576106c96112be565b5b6106d584828561120d565b509392505050565b6000813590506106ec816112de565b92915050565b60008083601f840112610708576107076112b4565b5b8235905067ffffffffffffffff811115610725576107246112af565b5b602083019150836020820283011115610741576107406112b9565b5b9250929050565b60008083601f84011261075e5761075d6112b4565b5b8235905067ffffffffffffffff81111561077b5761077a6112af565b5b602083019150836020820283011115610797576107966112b9565b5b9250929050565b6000813590506107ad816112f5565b92915050565b6000813590506107c28161130c565b92915050565b6000813590506107d781611323565b92915050565b60008083601f8401126107f3576107f26112b4565b5b8235905067ffffffffffffffff8111156108105761080f6112af565b5b60208301915083600182028301111561082c5761082b6112b9565b5b9250929050565b60008083601f840112610849576108486112b4565b5b8235905067ffffffffffffffff811115610866576108656112af565b5b602083019150836001820283011115610882576108816112b9565b5b9250929050565b600082601f83011261089e5761089d6112b4565b5b81356108ae84826020860161069b565b91505092915050565b6000813590506108c68161133a565b92915050565b6000813590506108db81611351565b92915050565b600080604083850312156108f8576108f76112c8565b5b6000610906858286016106dd565b9250506020610917858286016108b7565b9150509250929050565b60008060208385031215610938576109376112c8565b5b600083013567ffffffffffffffff811115610956576109556112c3565b5b61096285828601610748565b92509250509250929050565b600080600060408486031215610987576109866112c8565b5b60006109958682870161079e565b935050602084013567ffffffffffffffff8111156109b6576109b56112c3565b5b6109c286828701610833565b92509250509250925092565b600080602083850312156109e5576109e46112c8565b5b600083013567ffffffffffffffff811115610a0357610a026112c3565b5b610a0f858286016107dd565b92509250509250929050565b60008060008060408587031215610a3557610a346112c8565b5b600085013567ffffffffffffffff811115610a5357610a526112c3565b5b610a5f87828801610833565b9450945050602085013567ffffffffffffffff811115610a8257610a816112c3565b5b610a8e878288016106f2565b925092505092959194509250565b600080600080600080600060e0888a031215610abb57610aba6112c8565b5b600088013567ffffffffffffffff811115610ad957610ad86112c3565b5b610ae58a828b01610889565b9750506020610af68a828b016108b7565b965050604088013567ffffffffffffffff811115610b1757610b166112c3565b5b610b238a828b01610889565b9550506060610b348a828b0161079e565b9450506080610b458a828b016108cc565b93505060a088013567ffffffffffffffff811115610b6657610b656112c3565b5b610b728a828b01610889565b92505060c088013567ffffffffffffffff811115610b9357610b926112c3565b5b610b9f8a828b01610889565b91505092959891949750929550565b600060208284031215610bc457610bc36112c8565b5b6000610bd2848285016108b7565b91505092915050565b60008060408385031215610bf257610bf16112c8565b5b6000610c00858286016108b7565b9250506020610c11858286016108b7565b9150509250929050565b600080600060608486031215610c3457610c336112c8565b5b6000610c42868287016108b7565b9350506020610c53868287016108b7565b9250506040610c64868287016108b7565b9150509250925092565b6000610c7a8383610d76565b60208301905092915050565b6000610c928383610d85565b60208301905092915050565b610ca781611160565b82525050565b6000610cb983856110ee565b9350610cc4826110b5565b8060005b85811015610cfd57610cda8284611132565b610ce48882610c6e565b9750610cef836110d4565b925050600181019050610cc8565b5085925050509392505050565b6000610d1683856110ff565b9350610d21826110bf565b8060005b85811015610d5a57610d378284611149565b610d418882610c86565b9750610d4c836110e1565b925050600181019050610d25565b5085925050509392505050565b610d7081611172565b82525050565b610d7f8161117e565b82525050565b610d8e816111aa565b82525050565b6000610da08385611110565b9350610dad83858461120d565b610db6836112cd565b840190509392505050565b6000610dcd8385611121565b9350610dda83858461120d565b610de3836112cd565b840190509392505050565b6000610df9826110c9565b610e038185611121565b9350610e1381856020860161121c565b610e1c816112cd565b840191505092915050565b610e30816111f6565b82525050565b610e3f81611200565b82525050565b6000602082019050610e5a6000830184610c9e565b92915050565b6000604082019050610e756000830185610c9e565b610e826020830184610e27565b9392505050565b60006020820190508181036000830152610ea4818486610d0a565b90509392505050565b6000602082019050610ec26000830184610d67565b92915050565b6000604082019050610edd6000830186610d67565b8181036020830152610ef0818486610dc1565b9050949350505050565b60006020820190508181036000830152610f15818486610d94565b90509392505050565b60006040820190508181036000830152610f39818688610dc1565b90508181036020830152610f4e818486610cad565b905095945050505050565b600060e0820190508181036000830152610f73818a610dee565b9050610f826020830189610e27565b8181036040830152610f948188610dee565b9050610fa36060830187610d67565b610fb06080830186610e36565b81810360a0830152610fc28185610dee565b905081810360c0830152610fd68184610dee565b905098975050505050505050565b6000602082019050610ff96000830184610e27565b92915050565b60006040820190506110146000830185610e27565b6110216020830184610e27565b9392505050565b600060608201905061103d6000830186610e27565b61104a6020830185610e27565b6110576040830184610e27565b949350505050565b600061106961107a565b9050611075828261124f565b919050565b6000604051905090565b600067ffffffffffffffff82111561109f5761109e611280565b5b6110a8826112cd565b9050602081019050919050565b6000819050919050565b6000819050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061114160208401846107b3565b905092915050565b600061115860208401846107c8565b905092915050565b600061116b826111d6565b9050919050565b60008115159050919050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffffffffffff00000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b82818337600083830152505050565b60005b8381101561123a57808201518184015260208101905061121f565b83811115611249576000848401525b50505050565b611258826112cd565b810181811067ffffffffffffffff8211171561127757611276611280565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6112e781611160565b81146112f257600080fd5b50565b6112fe81611172565b811461130957600080fd5b50565b6113158161117e565b811461132057600080fd5b50565b61132c816111aa565b811461133757600080fd5b50565b611343816111f6565b811461134e57600080fd5b50565b61135a81611200565b811461136557600080fd5b5056fea2646970667358221220b5c6ff4b34adb2f0d2c45007c27f3b02c2577d76ec1b787fcda8f7b10190431764736f6c63430008060033";

type TestContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestContract__factory extends ContractFactory {
  constructor(...args: TestContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestContract__factory {
    return super.connect(runner) as TestContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestContract {
    return new Contract(address, _abi, runner) as unknown as TestContract;
  }
}
