/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TestPluckParam,
  TestPluckParamInterface,
} from "../../../contracts/test/TestPluckParam";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "first",
        type: "uint256[]",
      },
    ],
    name: "Dynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes2[]",
        name: "first",
        type: "bytes2[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "second",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "third",
        type: "uint32",
      },
    ],
    name: "Dynamic32DynamicStatic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "first",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "bytes2",
        name: "second",
        type: "bytes2",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "third",
        type: "bytes",
      },
    ],
    name: "Dynamic32StaticDynamic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "first",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "second",
        type: "uint32[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "third",
        type: "uint256",
      },
    ],
    name: "DynamicDynamic32Static",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "first",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "second",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes2[]",
        name: "third",
        type: "bytes2[]",
      },
    ],
    name: "DynamicStaticDynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4",
        name: "first",
        type: "bytes4",
      },
    ],
    name: "Static",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes4",
        name: "first",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "string",
        name: "second",
        type: "string",
      },
    ],
    name: "StaticDynamic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "first",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "second",
        type: "bytes4[]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "third",
        type: "string",
      },
    ],
    name: "StaticDynamic32Dynamic",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "first",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "second",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint32[]",
        name: "third",
        type: "uint32[]",
      },
    ],
    name: "StaticDynamicDynamic32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool[2]",
        name: "first",
        type: "bool[2]",
      },
      {
        indexed: false,
        internalType: "string",
        name: "second",
        type: "string",
      },
    ],
    name: "UnsupportedFixedSizeAndDynamic",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes2[]",
        name: "first",
        type: "bytes2[]",
      },
      {
        internalType: "string",
        name: "second",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "third",
        type: "uint32",
      },
    ],
    name: "dynamic32DynamicStatic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "first",
        type: "address[]",
      },
      {
        internalType: "bytes2",
        name: "second",
        type: "bytes2",
      },
      {
        internalType: "bytes",
        name: "third",
        type: "bytes",
      },
    ],
    name: "dynamic32StaticDynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "first",
        type: "string",
      },
      {
        internalType: "uint32[]",
        name: "second",
        type: "uint32[]",
      },
      {
        internalType: "uint256",
        name: "third",
        type: "uint256",
      },
    ],
    name: "dynamicDynamic32Static",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "first",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "second",
        type: "bool",
      },
      {
        internalType: "bytes2[]",
        name: "third",
        type: "bytes2[]",
      },
    ],
    name: "dynamicStaticDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "first",
        type: "bytes4",
      },
      {
        internalType: "string",
        name: "second",
        type: "string",
      },
    ],
    name: "staticDynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "first",
        type: "uint32",
      },
      {
        internalType: "bytes4[]",
        name: "second",
        type: "bytes4[]",
      },
      {
        internalType: "string",
        name: "third",
        type: "string",
      },
    ],
    name: "staticDynamic32Dynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "first",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "second",
        type: "bytes",
      },
      {
        internalType: "uint32[]",
        name: "third",
        type: "uint32[]",
      },
    ],
    name: "staticDynamicDynamic32",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "first",
        type: "bytes4",
      },
    ],
    name: "staticFn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[2]",
        name: "first",
        type: "bool[2]",
      },
      {
        internalType: "string",
        name: "second",
        type: "string",
      },
    ],
    name: "unsupportedFixedSizeAndDynamic",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506117fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637a35f123116100665780637a35f12314610108578063a98ef1cf14610124578063baf2eefa14610140578063c4192e4a1461015c578063e823738c1461017857610093565b806337015512146100985780635b963457146100b457806364664d13146100d0578063737c0619146100ec575b600080fd5b6100b260048036038101906100ad9190610944565b610194565b005b6100ce60048036038101906100c99190610c69565b6101d7565b005b6100ea60048036038101906100e59190610ac0565b61021a565b005b61010660048036038101906101019190610aed565b610254565b005b610122600480360381019061011d91906109d4565b610291565b005b61013e600480360381019061013991906108b4565b6102ce565b005b61015a60048036038101906101559190610a30565b610311565b005b61017660048036038101906101719190610b49565b610354565b005b610192600480360381019061018d9190610bd9565b610397565b005b7ff075499030dad0fb0fd2878a399376d71e13231c7af54624c2a288a42601c0c6848484846040516101c99493929190611153565b60405180910390a150505050565b7f72eaf418f502a248c34dd8eccb3ca0291c14e601cd7b298f2e71e9e3962e67e08484848460405161020c94939291906112ea565b60405180910390a150505050565b7fb5c17fceb7ed32ca7d35de5b1f1d72480380b270787e13003d91231dcc9d73fa816040516102499190611211565b60405180910390a150565b7f76fa1fabbdf96dc6b0fa36a24e7b1511d9b120f2178f630973b5f8b6628d515f828260405161028592919061122c565b60405180910390a15050565b7f5eccba0bddc755e6e24de421d8ffec35174da3cb7ff52c1b9b3c7525cb477ecd82826040516102c292919061119a565b60405180910390a15050565b7f3e0a610e1be8b64655e5853852e940a95a8a48afc70e507233f539a7705e021d84848484604051610303949392919061110c565b60405180910390a150505050565b7f3bafa5b318bd7252e855ebcfa8ed3dd10fcc2c2262e471ad63d090567a3987b48484848460405161034694939291906111ca565b60405180910390a150505050565b7f36aaf7ab4ac7e04baf8b5b49821821a14784e3be47bd9713b48ab828b7e26f3a84848484604051610389949392919061125c565b60405180910390a150505050565b7fa3195576e148a2d996a544668041e857599cce7237228a1d1e91a16deb6bb69a848484846040516103cc94939291906112a3565b60405180910390a150505050565b60006103ed6103e884611356565b611331565b9050808285602086028201111561040757610406611715565b5b60005b85811015610437578161041d8882610743565b84526020840193506020830192505060018101905061040a565b5050509392505050565b600061045461044f8461137c565b611331565b9050808382526020820190508285602086028201111561047757610476611715565b5b60005b858110156104a7578161048d8882610758565b84526020840193506020830192505060018101905061047a565b5050509392505050565b60006104c46104bf846113a8565b611331565b905080838252602082019050828560208602820111156104e7576104e6611715565b5b60005b8581101561051757816104fd888261089f565b8452602084019350602083019250506001810190506104ea565b5050509392505050565b600061053461052f846113d4565b611331565b9050828152602081018484840111156105505761054f61171a565b5b61055b848285611669565b509392505050565b600061057661057184611405565b611331565b9050828152602081018484840111156105925761059161171a565b5b61059d848285611669565b509392505050565b6000813590506105b48161173a565b92915050565b60008083601f8401126105d0576105cf611710565b5b8235905067ffffffffffffffff8111156105ed576105ec61170b565b5b60208301915083602082028301111561060957610608611715565b5b9250929050565b600082601f83011261062557610624611710565b5b60026106328482856103da565b91505092915050565b60008083601f84011261065157610650611710565b5b8235905067ffffffffffffffff81111561066e5761066d61170b565b5b60208301915083602082028301111561068a57610689611715565b5b9250929050565b600082601f8301126106a6576106a5611710565b5b81356106b6848260208601610441565b91505092915050565b60008083601f8401126106d5576106d4611710565b5b8235905067ffffffffffffffff8111156106f2576106f161170b565b5b60208301915083602082028301111561070e5761070d611715565b5b9250929050565b600082601f83011261072a57610729611710565b5b813561073a8482602086016104b1565b91505092915050565b60008135905061075281611751565b92915050565b60008135905061076781611768565b92915050565b60008135905061077c8161177f565b92915050565b60008083601f84011261079857610797611710565b5b8235905067ffffffffffffffff8111156107b5576107b461170b565b5b6020830191508360018202830111156107d1576107d0611715565b5b9250929050565b600082601f8301126107ed576107ec611710565b5b81356107fd848260208601610521565b91505092915050565b60008083601f84011261081c5761081b611710565b5b8235905067ffffffffffffffff8111156108395761083861170b565b5b60208301915083600182028301111561085557610854611715565b5b9250929050565b600082601f83011261087157610870611710565b5b8135610881848260208601610563565b91505092915050565b60008135905061089981611796565b92915050565b6000813590506108ae816117ad565b92915050565b600080600080606085870312156108ce576108cd611724565b5b60006108dc878288016105a5565b945050602085013567ffffffffffffffff8111156108fd576108fc61171f565b5b61090987828801610782565b9350935050604085013567ffffffffffffffff81111561092c5761092b61171f565b5b61093887828801610715565b91505092959194509250565b6000806000806060858703121561095e5761095d611724565b5b600085013567ffffffffffffffff81111561097c5761097b61171f565b5b610988878288016105ba565b9450945050602061099b87828801610758565b925050604085013567ffffffffffffffff8111156109bc576109bb61171f565b5b6109c8878288016107d8565b91505092959194509250565b600080606083850312156109eb576109ea611724565b5b60006109f985828601610610565b925050604083013567ffffffffffffffff811115610a1a57610a1961171f565b5b610a268582860161085c565b9150509250929050565b60008060008060608587031215610a4a57610a49611724565b5b600085013567ffffffffffffffff811115610a6857610a6761171f565b5b610a748782880161063b565b9450945050602085013567ffffffffffffffff811115610a9757610a9661171f565b5b610aa38782880161085c565b9250506040610ab48782880161089f565b91505092959194509250565b600060208284031215610ad657610ad5611724565b5b6000610ae48482850161076d565b91505092915050565b60008060408385031215610b0457610b03611724565b5b6000610b128582860161076d565b925050602083013567ffffffffffffffff811115610b3357610b3261171f565b5b610b3f8582860161085c565b9150509250929050565b60008060008060608587031215610b6357610b62611724565b5b600085013567ffffffffffffffff811115610b8157610b8061171f565b5b610b8d87828801610782565b94509450506020610ba087828801610743565b925050604085013567ffffffffffffffff811115610bc157610bc061171f565b5b610bcd87828801610691565b91505092959194509250565b60008060008060608587031215610bf357610bf2611724565b5b600085013567ffffffffffffffff811115610c1157610c1061171f565b5b610c1d87828801610806565b9450945050602085013567ffffffffffffffff811115610c4057610c3f61171f565b5b610c4c87828801610715565b9250506040610c5d8782880161088a565b91505092959194509250565b60008060008060608587031215610c8357610c82611724565b5b6000610c918782880161089f565b945050602085013567ffffffffffffffff811115610cb257610cb161171f565b5b610cbe878288016106bf565b9350935050604085013567ffffffffffffffff811115610ce157610ce061171f565b5b610ced8782880161085c565b91505092959194509250565b6000610d058383610d71565b60208301905092915050565b6000610d1d8383610fb9565b60208301905092915050565b6000610d358383610fd7565b60208301905092915050565b6000610d4d8383610ff5565b60208301905092915050565b6000610d6583836110ee565b60208301905092915050565b610d7a816115b9565b82525050565b610d89816115b9565b82525050565b6000610d9b8385611503565b9350610da682611436565b8060005b85811015610ddf57610dbc8284611574565b610dc68882610cf9565b9750610dd1836114b5565b925050600181019050610daa565b5085925050509392505050565b610df58161147e565b610dff8184611514565b9250610e0a82611440565b8060005b83811015610e3b578151610e228782610d11565b9650610e2d836114c2565b925050600181019050610e0e565b505050505050565b6000610e4f838561151f565b9350610e5a8261144a565b8060005b85811015610e9357610e70828461158b565b610e7a8882610d29565b9750610e85836114cf565b925050600181019050610e5e565b5085925050509392505050565b6000610eab82611489565b610eb5818561151f565b9350610ec083611454565b8060005b83811015610ef1578151610ed88882610d29565b9750610ee3836114dc565b925050600181019050610ec4565b5085935050505092915050565b6000610f0a8385611530565b9350610f1582611464565b8060005b85811015610f4e57610f2b82846115a2565b610f358882610d41565b9750610f40836114e9565b925050600181019050610f19565b5085925050509392505050565b6000610f6682611494565b610f708185611541565b9350610f7b8361146e565b8060005b83811015610fac578151610f938882610d59565b9750610f9e836114f6565b925050600181019050610f7f565b5085935050505092915050565b610fc2816115cb565b82525050565b610fd1816115cb565b82525050565b610fe0816115d7565b82525050565b610fef816115d7565b82525050565b610ffe81611603565b82525050565b61100d81611603565b82525050565b600061101f8385611552565b935061102c838584611669565b61103583611729565b840190509392505050565b600061104b8261149f565b6110558185611552565b9350611065818560208601611678565b61106e81611729565b840191505092915050565b60006110858385611563565b9350611092838584611669565b61109b83611729565b840190509392505050565b60006110b1826114aa565b6110bb8185611563565b93506110cb818560208601611678565b6110d481611729565b840191505092915050565b6110e88161164f565b82525050565b6110f781611659565b82525050565b61110681611659565b82525050565b60006060820190506111216000830187610d80565b8181036020830152611134818587611013565b905081810360408301526111488184610f5b565b905095945050505050565b6000606082019050818103600083015261116e818688610d8f565b905061117d6020830185610fe6565b818103604083015261118f8184611040565b905095945050505050565b60006060820190506111af6000830185610dec565b81810360408301526111c181846110a6565b90509392505050565b600060608201905081810360008301526111e5818688610e43565b905081810360208301526111f981856110a6565b905061120860408301846110fd565b95945050505050565b60006020820190506112266000830184611004565b92915050565b60006040820190506112416000830185611004565b818103602083015261125381846110a6565b90509392505050565b60006060820190508181036000830152611277818688611013565b90506112866020830185610fc8565b81810360408301526112988184610ea0565b905095945050505050565b600060608201905081810360008301526112be818688611079565b905081810360208301526112d28185610f5b565b90506112e160408301846110df565b95945050505050565b60006060820190506112ff60008301876110fd565b8181036020830152611312818587610efe565b9050818103604083015261132681846110a6565b905095945050505050565b600061133b61134c565b905061134782826116ab565b919050565b6000604051905090565b600067ffffffffffffffff821115611371576113706116dc565b5b602082029050919050565b600067ffffffffffffffff821115611397576113966116dc565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156113c3576113c26116dc565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156113ef576113ee6116dc565b5b6113f882611729565b9050602081019050919050565b600067ffffffffffffffff8211156114205761141f6116dc565b5b61142982611729565b9050602081019050919050565b6000819050919050565b6000819050919050565b6000819050919050565b6000819050602082019050919050565b6000819050919050565b6000819050602082019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600061158360208401846105a5565b905092915050565b600061159a6020840184610758565b905092915050565b60006115b1602084018461076d565b905092915050565b60006115c48261162f565b9050919050565b60008115159050919050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b82818337600083830152505050565b60005b8381101561169657808201518184015260208101905061167b565b838111156116a5576000848401525b50505050565b6116b482611729565b810181811067ffffffffffffffff821117156116d3576116d26116dc565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b611743816115b9565b811461174e57600080fd5b50565b61175a816115cb565b811461176557600080fd5b50565b611771816115d7565b811461177c57600080fd5b50565b61178881611603565b811461179357600080fd5b50565b61179f8161164f565b81146117aa57600080fd5b50565b6117b681611659565b81146117c157600080fd5b5056fea26469706673582212200583cef1139e40b1ffa0e296490e32ea1b17362bc741e23b98b01257ca170cb464736f6c63430008060033";

type TestPluckParamConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPluckParamConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPluckParam__factory extends ContractFactory {
  constructor(...args: TestPluckParamConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestPluckParam & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestPluckParam__factory {
    return super.connect(runner) as TestPluckParam__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPluckParamInterface {
    return new Interface(_abi) as TestPluckParamInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestPluckParam {
    return new Contract(address, _abi, runner) as unknown as TestPluckParam;
  }
}
